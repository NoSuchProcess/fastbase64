rdtsc_overhead set to 32
Testing first with random data.
displaying cycles per input bytes for linux, quicktime, chromium, scalar and avx2 decoders, first column is number of bytes
32  3.86  4.09  2.23  3.32  5.45  2.32  3.95 
40  3.82  3.71  2.11  2.79  2.25  1.36  2.11 
48  3.72  3.81  2.22  2.72  2.22  1.41  2.16 
56  3.79  3.63  2.11  2.79  2.39  1.47  2.34 
64  3.75  3.77  2.09  2.52  1.36  0.95  1.32 
72  3.75  3.90  2.10  2.50  1.58  1.08  1.54 
80  3.76  3.65  2.00  2.56  1.83  1.11  1.78 
88  3.80  3.55  1.97  2.42  1.12  0.77  1.07 
96  3.77  3.61  2.05  2.38  1.28  0.84  1.17 
104  3.77  3.51  1.94  2.41  1.46  0.93  1.39 
112  3.75  3.43  1.97  2.34  0.96  0.67  0.87 
120  3.76  3.50  1.99  2.30  1.12  0.71  1.05 
128  3.77  3.43  1.94  2.33  1.26  0.81  1.19 
136  3.76  3.39  1.95  2.38  0.88  0.57  0.78 
144  3.76  3.44  1.94  2.25  1.00  0.67  0.88 
152  3.75  3.40  1.91  2.33  1.12  0.71  1.03 
160  3.75  3.35  1.94  2.22  0.81  0.51  0.68 
168  3.74  3.38  1.91  2.24  0.90  0.59  0.79 
176  3.73  3.36  1.88  2.27  1.03  0.63  0.92 
184  3.73  3.32  1.93  2.27  0.74  0.48  0.62 
192  3.73  3.36  1.91  2.21  0.84  0.55  0.70 
200  3.75  3.33  1.89  2.23  0.96  0.58  0.83 
208  3.75  3.29  1.89  2.15  0.71  0.46  0.59 
216  3.73  3.32  1.90  2.17  0.79  0.49  0.67 
224  3.73  3.31  1.87  2.26  0.90  0.55  0.77 
232  3.72  3.28  1.89  2.17  0.69  0.44  0.54 
240  3.74  3.31  1.90  2.19  0.78  0.47  0.62 
248  3.76  3.28  1.87  2.24  0.84  0.52  0.71 
256  3.74  3.26  1.88  2.13  0.65  0.41  0.51 
264  3.72  3.27  1.89  2.18  0.73  0.44  0.59 
272  3.73  3.25  1.86  2.20  0.81  0.48  0.68 
280  3.80  3.24  1.88  2.15  0.65  0.40  0.49 
288  3.73  3.27  1.88  2.16  0.71  0.43  0.56 
296  3.74  3.25  1.86  2.21  0.78  0.46  0.64 
304  3.75  3.25  1.86  2.15  0.62  0.43  0.50 
312  3.73  3.25  1.86  2.15  0.68  0.42  0.54 
320  3.72  3.24  1.86  2.19  0.85  0.45  0.65 
328  3.73  3.23  1.87  2.18  0.60  0.39  0.46 
336  3.75  3.25  1.86  2.11  0.65  0.40  0.51 
344  3.75  3.23  1.85  2.17  0.73  0.45  0.60 
352  3.76  3.22  1.86  2.14  0.62  0.41  0.43 
360  3.75  3.23  1.87  2.14  0.68  0.40  0.50 
368  3.76  3.23  1.84  2.14  0.74  0.43  0.59 
376  3.76  3.20  1.85  2.11  0.59  0.36  0.43 
384  3.74  3.22  1.86  2.19  0.65  0.39  0.49 
392  3.74  3.22  1.87  2.13  0.73  0.41  0.55 
400  3.75  3.21  1.86  2.14  0.58  0.35  0.43 
408  3.75  3.22  1.86  2.17  0.63  0.39  0.47 
416  3.73  3.20  1.84  2.15  0.71  0.41  0.53 
424  3.74  3.21  1.87  2.13  0.57  0.35  0.41 
432  3.75  3.21  1.87  2.10  0.61  0.38  0.48 
440  3.73  3.19  1.85  2.13  0.68  0.39  0.53 
448  3.73  3.19  1.86  2.08  0.56  0.39  0.41 
456  3.74  3.21  1.86  2.12  0.62  0.38  0.46 
464  3.73  3.19  1.87  2.13  0.67  0.43  0.49 
472  3.73  3.19  1.87  2.10  0.55  0.36  0.40 
480  3.74  3.20  1.88  2.11  0.61  0.38  0.45 
488  3.73  3.19  1.86  2.13  0.66  0.42  0.51 
496  3.73  3.19  1.86  2.13  0.56  0.36  0.38 
504  3.74  3.19  1.86  2.17  0.60  0.38  0.44 
512  3.73  3.18  1.84  2.12  0.65  0.40  0.49 
520  3.73  3.18  1.86  2.09  0.53  0.36  0.38 
528  3.74  3.19  1.87  2.09  0.58  0.37  0.43 
536  3.72  3.19  1.85  2.11  0.64  0.40  0.48 
544  3.73  3.18  1.85  2.07  0.55  0.35  0.37 
552  3.73  3.18  1.85  2.11  0.58  0.37  0.42 
560  3.74  3.18  1.86  2.11  0.65  0.40  0.48 
568  3.74  3.17  1.85  2.08  0.54  0.34  0.37 
576  3.72  3.17  1.87  2.12  0.57  0.35  0.42 
584  3.72  3.18  1.85  2.12  0.62  0.38  0.47 
592  3.72  3.16  1.85  2.08  0.52  0.34  0.36 
600  3.71  3.18  1.85  2.10  0.57  0.35  0.40 
608  3.72  3.17  1.85  2.10  0.62  0.38  0.45 
616  3.72  3.16  1.85  2.12  0.52  0.34  0.36 
624  3.76  3.18  1.84  2.10  0.56  0.35  0.40 
632  3.72  3.17  1.84  2.11  0.60  0.37  0.45 
640  3.74  3.16  1.84  2.09  0.51  0.34  0.36 
648  3.72  3.17  1.85  2.08  0.56  0.34  0.39 
656  3.73  3.17  1.84  2.10  0.59  0.37  0.44 
664  3.73  3.16  1.84  2.08  0.51  0.32  0.35 
672  3.73  3.17  1.84  2.12  0.55  0.34  0.39 
680  3.75  3.16  1.83  2.11  0.60  0.36  0.43 
688  3.73  3.16  1.83  2.09  0.50  0.33  0.35 
696  3.73  3.16  1.84  2.09  0.55  0.34  0.39 
704  3.73  3.17  1.84  2.10  0.59  0.36  0.42 
712  3.75  3.16  1.85  2.08  0.50  0.32  0.34 
720  3.74  3.16  1.85  2.08  0.54  0.34  0.38 
728  3.73  3.16  1.83  2.09  0.58  0.36  0.42 
736  3.74  3.15  1.84  2.09  0.50  0.32  0.34 
744  3.73  3.16  1.84  2.08  0.54  0.33  0.38 
752  3.74  3.15  1.83  2.09  0.58  0.35  0.42 
760  3.74  3.16  1.83  2.09  0.49  0.32  0.34 
768  3.74  3.15  1.84  2.09  0.54  0.34  0.37 
776  3.74  3.16  1.83  2.09  0.57  0.35  0.41 
784  3.74  3.15  1.83  2.08  0.50  0.31  0.34 
792  3.77  3.16  1.83  2.08  0.53  0.32  0.36 
800  3.74  3.15  1.84  2.09  0.56  0.35  0.40 
808  3.75  3.14  1.83  2.06  0.49  0.31  0.33 
816  3.73  3.16  1.83  2.08  0.53  0.32  0.36 
824  3.74  3.14  1.83  2.10  0.55  0.34  0.39 
832  3.77  3.15  1.83  2.06  0.49  0.31  0.33 
840  3.73  3.16  1.84  2.06  0.52  0.32  0.36 
848  3.74  3.14  1.83  2.08  0.56  0.34  0.39 
856  3.74  3.15  1.83  2.09  0.49  0.31  0.33 
864  3.73  3.15  1.84  2.07  0.52  0.33  0.36 
872  3.79  3.15  1.83  2.09  0.55  0.34  0.39 
880  3.73  3.15  1.84  2.05  0.48  0.31  0.32 
888  3.73  3.15  1.84  2.08  0.52  0.31  0.35 
896  3.73  3.15  1.83  2.08  0.55  0.34  0.39 
904  3.73  3.15  1.84  2.07  0.49  0.31  0.32 
912  3.74  3.15  1.85  2.07  0.52  0.33  0.36 
920  3.73  3.15  1.83  2.08  0.55  0.33  0.38 
928  3.75  3.14  1.83  2.08  0.49  0.30  0.32 
936  3.73  3.14  1.84  2.07  0.51  0.31  0.35 
944  3.74  3.15  1.82  2.07  0.55  0.33  0.38 
952  3.72  3.15  1.83  2.06  0.49  0.30  0.31 
960  3.73  3.15  1.84  2.08  0.52  0.31  0.35 
968  3.74  3.14  1.82  2.09  0.54  0.33  0.38 
976  3.73  3.15  1.84  2.08  0.48  0.30  0.32 
984  3.72  3.14  1.85  2.07  0.51  0.30  0.34 
992  3.73  3.14  1.84  2.08  0.54  0.32  0.37 
1000  3.73  3.14  1.83  2.07  0.49  0.30  0.31 
1008  3.74  3.15  1.83  2.06  0.50  0.31  0.34 
1016  3.72  3.14  1.83  2.08  0.54  0.32  0.37 
1024  3.74  3.13  1.83  2.06  0.48  0.30  0.31 
1032  3.73  3.15  1.84  2.07  0.51  0.30  0.34 
1040  3.72  3.14  1.83  2.06  0.54  0.32  0.37 
1048  3.72  3.14  1.83  2.07  0.48  0.29  0.31 
1056  3.73  3.14  1.84  2.06  0.50  0.30  0.34 
1064  3.73  3.14  1.83  2.08  0.54  0.32  0.36 
1072  3.74  3.14  1.82  2.08  0.48  0.29  0.31 
1080  3.72  3.15  1.83  2.05  0.51  0.30  0.33 
1088  3.72  3.14  1.82  2.08  0.53  0.32  0.36 
1096  3.73  3.13  1.83  2.07  0.48  0.29  0.31 
1104  3.73  3.14  1.83  2.08  0.51  0.31  0.33 
1112  3.72  3.15  1.82  2.07  0.52  0.32  0.36 
1120  3.73  3.14  1.84  2.09  0.49  0.29  0.30 
1128  3.72  3.14  1.86  2.06  0.49  0.30  0.33 
1136  3.72  3.14  1.84  2.07  0.53  0.31  0.35 
1144  3.73  3.13  1.83  2.07  0.47  0.29  0.31 
1152  3.73  3.14  1.83  2.06  0.50  0.30  0.33 
1160  3.72  3.14  1.83  2.07  0.52  0.31  0.35 
1168  3.73  3.14  1.83  2.06  0.48  0.30  0.30 
1176  3.71  3.14  1.84  2.07  0.49  0.30  0.33 
1184  3.71  3.13  1.84  2.08  0.51  0.31  0.35 
1192  3.72  3.13  1.83  2.05  0.47  0.29  0.30 
1200  3.72  3.13  1.84  2.07  0.48  0.29  0.32 
1208  3.74  3.14  1.83  2.07  0.52  0.31  0.35 
1216  3.73  3.13  1.83  2.07  0.48  0.29  0.30 
1224  3.73  3.14  1.83  2.07  0.50  0.30  0.32 
1232  3.73  3.13  1.82  2.06  0.51  0.31  0.35 
1240  3.73  3.13  1.84  2.06  0.48  0.28  0.30 
1248  3.72  3.14  1.85  2.05  0.50  0.29  0.32 
1256  3.73  3.14  1.82  2.07  0.52  0.31  0.34 
1264  3.79  3.13  1.84  2.06  0.47  0.29  0.30 
1272  3.73  3.14  1.84  2.05  0.49  0.29  0.32 
1280  3.73  3.13  1.84  2.05  0.51  0.31  0.34 
1288  3.73  3.13  1.83  2.06  0.47  0.28  0.30 
1296  3.73  3.13  1.84  2.05  0.49  0.30  0.32 
1304  3.75  3.13  1.83  2.07  0.50  0.30  0.34 
1312  3.73  3.13  1.83  2.06  0.47  0.28  0.29 
1320  3.74  3.13  1.83  2.06  0.49  0.29  0.32 
1328  3.75  3.13  1.83  2.06  0.51  0.30  0.34 
1336  3.74  3.12  1.83  2.05  0.46  0.28  0.29 
1344  3.74  3.13  1.83  2.06  0.49  0.29  0.32 
1352  3.74  3.13  1.82  2.06  0.50  0.30  0.34 
1360  3.75  3.12  1.84  2.06  0.47  0.29  0.29 
1368  3.76  3.13  1.85  2.05  0.48  0.29  0.31 
1376  3.74  3.13  1.83  2.06  0.51  0.30  0.34 
1384  3.74  3.13  1.83  2.04  0.47  0.28  0.29 
1392  3.74  3.13  1.83  2.05  0.49  0.29  0.31 
1400  3.74  3.13  1.84  2.06  0.50  0.30  0.33 
1408  3.78  3.13  1.83  2.06  0.46  0.28  0.29 
1416  3.74  3.14  1.84  2.05  0.49  0.29  0.31 
1424  3.76  3.13  1.83  2.06  0.50  0.30  0.33 
1432  3.75  3.13  1.84  2.05  0.46  0.28  0.29 
1440  3.74  3.13  1.84  2.05  0.48  0.28  0.30 
1448  3.74  3.13  1.83  2.06  0.50  0.30  0.33 
1456  3.74  3.13  1.82  2.07  0.46  0.28  0.29 
1464  3.74  3.13  1.83  2.06  0.48  0.28  0.31 
1472  3.74  3.12  1.83  2.07  0.51  0.30  0.33 
1480  3.74  3.12  1.82  2.05  0.46  0.28  0.29 
1488  3.73  3.13  1.84  2.06  0.48  0.28  0.31 
1496  3.74  3.13  1.82  2.06  0.50  0.29  0.33 
1504  3.76  3.13  1.83  2.05  0.46  0.28  0.29 
1512  3.74  3.13  1.83  2.05  0.48  0.28  0.31 
1520  3.73  3.13  1.82  2.06  0.50  0.29  0.32 
1528  3.77  3.12  1.82  2.07  0.45  0.28  0.29 
1536  3.74  3.12  1.83  2.07  0.47  0.28  0.30 
1544  3.73  3.12  1.83  2.06  0.49  0.30  0.32 
1552  3.75  3.12  1.82  2.04  0.45  0.28  0.29 
1560  3.72  3.13  1.82  2.06  0.47  0.28  0.31 
1568  3.72  3.13  1.82  2.06  0.49  0.29  0.32 
1576  3.74  3.12  1.82  2.06  0.45  0.27  0.28 
1584  3.74  3.12  1.83  2.06  0.47  0.28  0.30 
1592  3.73  3.12  1.83  2.06  0.48  0.29  0.32 
1600  3.73  3.13  1.82  2.05  0.45  0.28  0.28 
1608  3.73  3.14  1.82  2.06  0.47  0.28  0.30 
1616  3.73  3.13  1.82  2.06  0.49  0.29  0.32 
1624  3.74  3.12  1.82  2.07  0.45  0.27  0.29 
1632  3.73  3.12  1.82  2.06  0.46  0.28  0.30 
1640  3.72  3.13  1.82  2.05  0.48  0.29  0.32 
1648  3.74  3.13  1.82  2.05  0.45  0.27  0.28 
1656  3.73  3.12  1.82  2.06  0.47  0.28  0.30 
1664  3.77  3.12  1.83  2.06  0.48  0.29  0.32 
1672  3.75  3.12  1.83  2.05  0.45  0.27  0.28 
1680  3.73  3.13  1.82  2.06  0.47  0.28  0.30 
1688  3.75  3.12  1.82  2.06  0.48  0.28  0.31 
1696  3.77  3.12  1.82  2.06  0.45  0.28  0.28 
1704  3.73  3.13  1.82  2.05  0.46  0.28  0.30 
1712  3.76  3.13  1.82  2.06  0.48  0.29  0.32 
1720  3.79  3.12  1.82  2.05  0.45  0.28  0.28 
1728  3.78  3.13  1.83  2.05  0.46  0.29  0.30 
1736  3.76  3.13  1.82  2.06  0.48  0.29  0.32 
1744  3.76  3.12  1.82  2.07  0.45  0.27  0.29 
1752  3.75  3.12  1.83  2.05  0.47  0.28  0.30 
1760  3.76  3.13  1.82  2.06  0.48  0.29  0.32 
1768  3.75  3.12  1.83  2.05  0.45  0.27  0.29 
1776  3.81  3.12  1.83  2.05  0.46  0.28  0.30 
1784  3.78  3.13  1.82  2.06  0.48  0.29  0.32 
1792  3.78  3.12  1.82  2.07  0.45  0.27  0.29 
1800  3.78  3.12  1.83  2.06  0.47  0.28  0.30 
1808  3.78  3.13  1.82  2.06  0.48  0.28  0.31 
1816  3.78  3.12  1.84  2.05  0.45  0.27  0.28 
1824  3.80  3.13  1.84  2.06  0.47  0.28  0.29 
1832  3.82  3.13  1.83  2.06  0.48  0.29  0.31 
1840  3.82  3.12  1.83  2.07  0.45  0.27  0.28 
1848  3.81  3.13  1.83  2.06  0.47  0.28  0.30 
1856  3.80  3.12  1.82  2.06  0.47  0.29  0.32 
1864  3.80  3.12  1.82  2.06  0.45  0.27  0.28 
1872  3.81  3.13  1.82  2.07  0.46  0.27  0.29 
1880  3.84  3.12  1.82  2.06  0.48  0.29  0.31 
1888  3.77  3.13  1.84  2.07  0.45  0.27  0.28 
1896  3.78  3.12  1.85  2.06  0.46  0.28  0.30 
1904  3.82  3.13  1.84  2.06  0.48  0.29  0.31 
1912  3.79  3.12  1.82  2.07  0.45  0.27  0.28 
1920  3.85  3.12  1.82  2.06  0.46  0.28  0.30 
1928  3.80  3.13  1.82  2.06  0.48  0.28  0.31 
1936  3.85  3.12  1.83  2.05  0.45  0.27  0.28 
1944  3.81  3.13  1.83  2.06  0.46  0.27  0.29 
1952  3.80  3.12  1.84  2.05  0.47  0.28  0.31 
1960  3.86  3.12  1.82  2.06  0.45  0.27  0.28 
1968  3.83  3.12  1.82  2.05  0.46  0.28  0.29 
1976  3.84  3.13  1.82  2.06  0.47  0.29  0.31 
1984  3.81  3.11  1.82  2.06  0.44  0.27  0.28 
1992  3.82  3.13  1.82  2.05  0.46  0.28  0.30 
2000  3.85  3.12  1.82  2.06  0.47  0.28  0.31 
2008  3.81  3.12  1.82  2.06  0.45  0.27  0.28 
2016  3.84  3.12  1.83  2.06  0.46  0.27  0.29 
2024  3.84  3.12  1.82  2.06  0.47  0.28  0.31 
2032  3.88  3.11  1.84  2.06  0.44  0.27  0.28 
2040  3.83  3.12  1.83  2.06  0.45  0.27  0.29 
2048  3.84  3.12  1.83  2.06  0.47  0.28  0.30 
Testing with real data.
lena [jpg]
decoding a base64 input of  141020 bytes, original size = 105764 
linux_base64_decode(buffer, data, data + datalength)        	:  19.76 cycles per operation (best) 	19.83 cycles per operation (avg) 
quicktime_base64_decode(buffer, data)                       	:  3.11 cycles per operation (best) 	3.12 cycles per operation (avg) 
chromium_base64_decode(buffer, data, datalength)            	:  1.84 cycles per operation (best) 	1.84 cycles per operation (avg) 
scalar_base64_decode(data,datalength,buffer,&outputlength)  	:  2.03 cycles per operation (best) 	2.04 cycles per operation (avg) 
avx2_base64_decode(data,datalength,buffer,&outputlength)    	:  0.42 cycles per operation (best) 	0.42 cycles per operation (avg) 
expavx2_base64_decode(buffer, data, datalength)             	:  0.25 cycles per operation (best) 	0.25 cycles per operation (avg) 
exp2avx2_base64_decode(data,datalength,buffer,&outputlength)	:  0.25 cycles per operation (best) 	0.25 cycles per operation (avg) 

peppers [jpg]
decoding a base64 input of  12640 bytes, original size = 9478 
linux_base64_decode(buffer, data, data + datalength)        	:  17.51 cycles per operation (best) 	18.50 cycles per operation (avg) 
quicktime_base64_decode(buffer, data)                       	:  3.10 cycles per operation (best) 	3.11 cycles per operation (avg) 
chromium_base64_decode(buffer, data, datalength)            	:  1.83 cycles per operation (best) 	1.84 cycles per operation (avg) 
scalar_base64_decode(data,datalength,buffer,&outputlength)  	:  2.04 cycles per operation (best) 	2.05 cycles per operation (avg) 
avx2_base64_decode(data,datalength,buffer,&outputlength)    	:  0.43 cycles per operation (best) 	0.44 cycles per operation (avg) 
expavx2_base64_decode(buffer, data, datalength)             	:  0.25 cycles per operation (best) 	0.26 cycles per operation (avg) 
exp2avx2_base64_decode(data,datalength,buffer,&outputlength)	:  0.26 cycles per operation (best) 	0.27 cycles per operation (avg) 

mandril [jpg]
decoding a base64 input of  329632 bytes, original size = 247222 
linux_base64_decode(buffer, data, data + datalength)        	:  20.11 cycles per operation (best) 	20.15 cycles per operation (avg) 
quicktime_base64_decode(buffer, data)                       	:  3.10 cycles per operation (best) 	3.11 cycles per operation (avg) 
chromium_base64_decode(buffer, data, datalength)            	:  1.84 cycles per operation (best) 	1.84 cycles per operation (avg) 
scalar_base64_decode(data,datalength,buffer,&outputlength)  	:  2.03 cycles per operation (best) 	2.04 cycles per operation (avg) 
avx2_base64_decode(data,datalength,buffer,&outputlength)    	:  0.42 cycles per operation (best) 	0.44 cycles per operation (avg) 
expavx2_base64_decode(buffer, data, datalength)             	:  0.25 cycles per operation (best) 	0.25 cycles per operation (avg) 
exp2avx2_base64_decode(data,datalength,buffer,&outputlength)	:  0.25 cycles per operation (best) 	0.25 cycles per operation (avg) 

moby_dick [text]
decoding a base64 input of  1484 bytes, original size = 1111 
linux_base64_decode(buffer, data, data + datalength)        	:  5.01 cycles per operation (best) 	9.19 cycles per operation (avg) 
quicktime_base64_decode(buffer, data)                       	:  3.13 cycles per operation (best) 	3.17 cycles per operation (avg) 
chromium_base64_decode(buffer, data, datalength)            	:  1.82 cycles per operation (best) 	1.84 cycles per operation (avg) 
scalar_base64_decode(data,datalength,buffer,&outputlength)  	:  2.08 cycles per operation (best) 	2.11 cycles per operation (avg) 
avx2_base64_decode(data,datalength,buffer,&outputlength)    	:  0.52 cycles per operation (best) 	0.58 cycles per operation (avg) 
expavx2_base64_decode(buffer, data, datalength)             	:  0.31 cycles per operation (best) 	0.35 cycles per operation (avg) 
exp2avx2_base64_decode(data,datalength,buffer,&outputlength)	:  0.36 cycles per operation (best) 	0.42 cycles per operation (avg) 

google logo [png]
decoding a base64 input of  3144 bytes, original size = 2357 
linux_base64_decode(buffer, data, data + datalength)        	:  9.42 cycles per operation (best) 	13.71 cycles per operation (avg) 
quicktime_base64_decode(buffer, data)                       	:  3.11 cycles per operation (best) 	3.13 cycles per operation (avg) 
chromium_base64_decode(buffer, data, datalength)            	:  1.82 cycles per operation (best) 	1.83 cycles per operation (avg) 
scalar_base64_decode(data,datalength,buffer,&outputlength)  	:  2.04 cycles per operation (best) 	2.05 cycles per operation (avg) 
avx2_base64_decode(data,datalength,buffer,&outputlength)    	:  0.47 cycles per operation (best) 	0.50 cycles per operation (avg) 
expavx2_base64_decode(buffer, data, datalength)             	:  0.27 cycles per operation (best) 	0.29 cycles per operation (avg) 
exp2avx2_base64_decode(data,datalength,buffer,&outputlength)	:  0.29 cycles per operation (best) 	0.32 cycles per operation (avg) 

bing.com social icons [png]
decoding a base64 input of  1808 bytes, original size = 1355 
linux_base64_decode(buffer, data, data + datalength)        	:  7.72 cycles per operation (best) 	13.79 cycles per operation (avg) 
quicktime_base64_decode(buffer, data)                       	:  3.13 cycles per operation (best) 	3.14 cycles per operation (avg) 
chromium_base64_decode(buffer, data, datalength)            	:  1.84 cycles per operation (best) 	1.84 cycles per operation (avg) 
scalar_base64_decode(data,datalength,buffer,&outputlength)  	:  2.06 cycles per operation (best) 	2.08 cycles per operation (avg) 
avx2_base64_decode(data,datalength,buffer,&outputlength)    	:  0.46 cycles per operation (best) 	0.50 cycles per operation (avg) 
expavx2_base64_decode(buffer, data, datalength)             	:  0.28 cycles per operation (best) 	0.31 cycles per operation (avg) 
exp2avx2_base64_decode(data,datalength,buffer,&outputlength)	:  0.29 cycles per operation (best) 	0.34 cycles per operation (avg) 

